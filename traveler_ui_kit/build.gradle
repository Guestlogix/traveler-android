apply plugin: 'com.android.library'
apply plugin: 'androidx.navigation.safeargs'
ext {
    androidx_version = '1.1.0-alpha02'
}

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "${traveler_ui_version}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

}

dependencies {

    //Traveler SDK
    implementation "com.guestlogix:traveler_core_kit:${traveler_core_version}"

    //AndroidX dependencies
    implementation "com.android.support:appcompat-v7:${android_support_component_version}"
    implementation "com.android.support:recyclerview-v7:${android_support_version}"
    implementation "com.android.support:design:${android_support_version}"
    implementation "com.android.support:recyclerview-v7:${android_support_version}"
    implementation "android.arch.lifecycle:extensions:${android_lifecycle_extension_version}"
    implementation "android.arch.navigation:navigation-fragment:${android_navigation_controller_version}"
    implementation "android.arch.navigation:navigation-ui:${android_navigation_controller_version}"

    //Testing frameworks
    implementation "androidx.constraintlayout:constraintlayout:${androidx_constraintlayout_version}"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation "junit:junit:${junit_version}"
    androidTestImplementation "androidx.test:runner:${androidx_test_runner_version}"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: 'publish.gradle'
